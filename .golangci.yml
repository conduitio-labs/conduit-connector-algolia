run:
  timeout: 5m 

linters-settings:
  nolintlint:
    allow-unused: false # report any unused nolint directives
    require-explanation: true # require an explanation for nolint directives
    require-specific: true # require nolint directives to mention the specific linter being suppressedgoconst:
  wrapcheck:
    ignoreSigs:
      - .Errorf(
      - errors.New(
      - errors.Unwrap(
      - errors.Join(
      - .Wrap(
      - .Wrapf(
      - .WithMessage(
      - .WithMessagef(
      - .WithStack(
      - (context.Context).Err()


linters:
  # please, do not use `enable-all`: it's deprecated and will be removed soon.
  # inverted configuration with `enable-all` and `disable` is not scalable during updates of golangci-lint
  disable-all: true
  enable:
    - asasalint
    - asciicheck
    - bidichk
    - bodyclose
    - containedctx
    - contextcheck
    - copyloopvar
    - decorder
    - dogsled
    - dupl
    - dupword
    - durationcheck
    - errcheck
    - errchkjson
    - errname
    - errorlint
    - exhaustive
    - gochecknoinits
    - goconst
    - gocritic
    - godot
    - gofmt
    - gofumpt
    - goheader
    - goimports
    - revive
    - gocheckcompilerdirectives
    - gocognit
    - grouper
    - interfacebloat
    - gomoddirectives
    - gomodguard
    - goprintffuncname
    - gosec
    - gosimple
    - govet
    - ineffassign
    - importas
    - nakedret
    - nilerr
    - nilnil
    - noctx
    - nolintlint
    - predeclared
    - rowserrcheck
    - staticcheck
    - stylecheck
    - sqlclosecheck
    - tenv
    - mirror
    - musttag
    - nestif
    - typecheck
    - unconvert
    - unparam
    - unused
    - wastedassign
    - whitespace
    - loggercheck
    - maintidx
    - nosprintfhostport
    - prealloc
    - promlinter
    - reassign
    - testableexamples
    - unconvert
    - usestdlibvars
    - zerologlint